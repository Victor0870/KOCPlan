    private void DisplayMaterial(E_SparePart materialData, bool isSelectPanel)
    {
        GameObject prefabToUse = isSelectPanel ? _materialSelectPanelItemPrefab : _materialItemPrefab;
        Transform parentToUse = isSelectPanel ? _materialSelectParent : _materialsListParent;
        if (prefabToUse == null || parentToUse == null)
        {
            Debug.LogError("Prefab hoặc Parent Transform chưa được gán!");
            return;
        }

        GameObject materialUI = GameObject.Instantiate(prefabToUse, parentToUse);
        MaterialItemUI itemScript = materialUI.GetComponent<MaterialItemUI>();
        if (itemScript != null)
        {
            string name = materialData.f_name;
            string stock = materialData.f_Stock.ToString();
            string location = materialData.f_Location;
            string purpose = materialData.f_Purpose;
            string category = materialData.f_Category;
            string type = materialData.f_Type;
            string materialId = materialData.f_No.ToString();

            itemScript.SetMaterialData(name, stock, location, purpose, category, type);
            if (isSelectPanel && itemScript.addButton != null)
            {
                if (_purchasePanel != null && _purchasePanel.activeSelf)
                {
                    itemScript.addButton.onClick.AddListener(() => OnAddMaterialToPurchaseClicked?.Invoke(materialId, 1));
                    itemScript.addButton.interactable = true; // Luôn cho phép thêm vào khi ở chế độ mua hàng
                }
                else // Đây là chế độ sử dụng
                {
                    itemScript.addButton.onClick.AddListener(() => OnAddMaterialToTaskClicked?.Invoke(materialId, 1));
                    itemScript.addButton.interactable = materialData.f_Stock > 0; // Chỉ cho phép thêm vào khi tồn kho > 0
                }
            }
            if (!isSelectPanel && itemScript.itemButton != null)
            {
                itemScript.itemButton.onClick.AddListener(() => OnMaterialItemSelected?.Invoke(materialId));
            }
        }
    }
