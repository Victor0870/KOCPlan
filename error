    private async void HandleRemoveMaterialConfirmed(string materialId)
    {
        Debug.Log($"Đang xử lý yêu cầu xóa vật tư với ID: {materialId} khỏi Task ID: {_currentTaskId}");

        // Tìm bản ghi sử dụng vật tư cục bộ
        var localUsageRecord = E_UsageHistory.FindEntity(e => e.f_materialId == materialId && e.f_taskId == _currentTaskId);

        if (localUsageRecord != null)
        {
            Debug.Log("Đã tìm thấy bản ghi sử dụng cục bộ.");
            if (!string.IsNullOrEmpty(localUsageRecord.f_firestoreDocId))
            {
                // Xóa trên Firebase trước
                await _materialDataHandler.DeleteMaterialUsage(_currentTaskId, localUsageRecord.f_firestoreDocId);
                Debug.Log($"Đã gửi yêu cầu xóa bản ghi Firestore với ID: {localUsageRecord.f_firestoreDocId}");
            }
            else
            {
                Debug.LogWarning("Không tìm thấy firestoreDocId, chỉ xóa bản ghi cục bộ.");
            }

            // Xóa bản ghi cục bộ
            localUsageRecord.Delete();
            SaveData.Save();
            Debug.Log("Đã xóa bản ghi sử dụng vật tư cục bộ.");

            // Tăng tồn kho vật tư
            var localMaterial = E_SparePart.FindEntity(entity => entity.f_No.ToString() == materialId);
            if (localMaterial != null)
            {
                // Giả định chúng ta xóa 1 vật tư khỏi danh sách, nếu cần xóa nhiều hơn, cần điều chỉnh logic
                localMaterial.f_Stock += 1; 
                await synchronizerToFirebase.SynchronizeSingleSparePart(localMaterial);
                SaveData.Save();
                Debug.Log("Đã lưu dữ liệu vào bộ nhớ cục bộ sau khi xóa vật tư và tăng stock.");
            }

            // Cập nhật giao diện người dùng
            _materialUIManager.RemoveTemporaryMaterial(materialId);
            Debug.Log("Đã cập nhật giao diện người dùng.");
        }
        else
        {
            Debug.LogWarning("Không tìm thấy bản ghi sử dụng vật tư cục bộ để xóa.");
        }
    }
            if (!isSelectPanel && itemScript.itemButton != null)
            {
                itemScript.itemButton.onClick.AddListener(() => OnMaterialItemSelected?.Invoke(materialId));
            }
        }
    }
